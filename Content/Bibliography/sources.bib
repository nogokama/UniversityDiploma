@misc{dslab-repo,
  title = {DsLab repository},
  url   = {https://github.com/osukhoroslov/dslab}
}

@misc{dslab-cluster-scheduling-repo,
  title = {DsLab Cluster Scheduling Simulator repository},
  url   = {https://github.com/nogokama/dslab-cluster-simulator}
}

@misc{async-book,
  title = {Asynchronous Programming in Rust},
  url   = {https://rust-lang.github.io/async-book}
}

@misc{async-book-example,
  title = {Asynchronous Programming in Rust. Under the Hood: Executing Futures and Tasks},
  url   = {https://rust-lang.github.io/async-book/02_execution/01_chapter.html}
}


@misc{rust-futures,
  title = {Rust crate <<futures>>},
  url   = {https://crates.io/crates/futures}
}

@misc{rust-async-trait,
  title = {Rust crate <<async-trait>>},
  url   = {https://crates.io/crates/async-trait}
}

@misc{rust-std-future,
  title = {Rust std::future library},
  url   = {https://doc.rust-lang.org/std/future/index.html}
}

@misc{my-demo,
  title = {Прототип асинхронного dslab-core},
  url   = {https://gitlab.com/makogon2907/rust-async-await-prototype}
}

@misc{my-demo-replicas,
  title = {Пример использования прототипа асинхронного ядра в случае распределенного хранилища},
  url   = {https://gitlab.com/makogon2907/rust-async-await-prototype/-/tree/master/samples/replicas}
}

@misc{shad-rust,
  title = {Shad Rust course repository},
  url   = {https://gitlab.manytask.org/rust-ysda/public-2022-fall}
}

@misc{dslab-description,
  title = {DSLab description},
  url   = {https://docs.google.com/document/d/1Z8ivtqLRMFG-EfaiRaWBT8dNHFjYjuDhz0bWIYkc-A8/edit}
}

@misc{dslab-requirements,
  title = {DSLab requirements},
  url   = {https://docs.google.com/document/d/1CprULnQiVSWTXiBkx90CSEi4tgkUhM3R6VeCp1CsRwo/edit}
}

@misc{dslab-architecture,
  title = {DSLab architecture},
  url   = {https://docs.google.com/document/d/12CcGpdulqMJppAYoNrOdpIWZYEa3flXn9JMX5fdyAnY/edit}
}

@misc{dslab-analog-cmp,
  title = {DsLab comparison to other simulators},
  url   = {https://docs.google.com/document/d/1H2711nGiS6m7QTo4pMfmrIBmg4llLKUhQzDiFNIw-UU/edit}
}


@misc{opendc-repo,
  title = {Репозиторий проекта OpenDC},
  url   = {https://github.com/atlarge-research/opendc}
}

@misc{simgrid-example,
  title = {Пример использования асинхронного кода в фреймворке SimGrid: ping-pong},
  url   = {https://github.com/osukhoroslov/dslab/blob/main/examples-other/simgrid/ping-pong/process.cpp}
}

@misc{simgrid-master-workers,
  title = {Пример использования асинхронного кода в фреймворке SimGrid: master-workers},
  url   = {https://github.com/osukhoroslov/dslab/blob/main/examples-other/simgrid/master-workers/worker.cpp}
}

@misc{opendc-example,
  title = {Пример использования асинхронного кода в фреймворке OpenDC},
  url   = {https://github.com/atlarge-research/opendc/blob/master/opendc-simulator/opendc-simulator-core/src/main/kotlin/org/opendc/simulator/kotlin/SimulationBuilders.kt}
}

@misc{async-dslab-core,
  title = {Реализация асинхронного ядра},
  url   = {https://github.com/nogokama/dslab/tree/modify_dslab_core/crates/dslab-core/src}
}

@misc{async-event-details-example,
  title = {Пример async-event-details из DSLab},
  url   = {https://github.com/nogokama/dslab/tree/modify_dslab_core/examples/async-event-details/src/process.rs}
}

@misc{async-master-workers-example,
  title   = {Пример async-master-workers из DSLab},
  url     = {https://github.com/nogokama/dslab/tree/modify_dslab_core/examples/async-master-workers/src},
  urlyear = {11.05.2023}
}

@misc{master-workers-example,
  title   = {Пример master-workers из DSLab},
  url     = {https://github.com/nogokama/dslab/tree/modify_dslab_core/examples/master-workers/src},
  urlyear = {11.05.2023}
}

@misc{async-ping-pong-example,
  title   = {Пример async-ping-pong из DSLab},
  url     = {https://github.com/nogokama/dslab/tree/modify_dslab_core/examples/async-ping-pong/src},
  urlyear = {11.05.2023}
}

@misc{ping-pong-example,
  title   = {Пример ping-pong из DSLab},
  url     = {https://github.com/nogokama/dslab/tree/modify_dslab_core/examples/ping-pong/src},
  urlyear = {11.05.2023}
}


@misc{dslab-scheduling-simple,
  title = {Simple scheduler implementation using DSLab},
  url   = {https://github.com/nogokama/dslab/blob/dslab_scheduling_initial/examples/scheduling-simple/}
}


@misc{standard-workload-format,
  title = {The Standard Workload Format Specification},
  url   = {https://www.cs.huji.ac.il/labs/parallel/workload/swf.html}
}

@misc{async-dslab,
  title = {Implementation of Asynchronous Programming Support for the DSLab Framework},
  url   = {https://nogokama.github.io/ThirdYearCoursework/report.pdf}
}

@misc{dslab-compute-docs,
  title = {DSLab compute module documentation},
  url   = {https://osukhoroslov.github.io/dslab/docs/dslab_compute/index.html}
}

@misc{dslab-network-docs,
  title = {DSLab network module documentation},
  url   = {https://osukhoroslov.github.io/dslab/docs/dslab_network/index.html}
}

@misc{dslab-storage-docs,
  title = {DSLab storage module documentation},
  url   = {https://osukhoroslov.github.io/dslab/docs/dslab_storage/index.html}
}

@misc{batsim-profile-types-overview,
  title = {BatSim profile types overview},
  url   = {https://batsim.readthedocs.io/en/latest/input-workload.html#profile-types-overview}
}

@misc{yt-scheduler,
  title = {Устройство планировщика Yandex YT. Запись с конференции \texttt{HighLoad}},
  url   = {https://www.youtube.com/watch?v=Uv-IcGZSRpk&ab_channel=HighLoadChannel}
}

@misc{slurm-cpu-management,
  title = {Slurm CPU Management User and Administrator Guide},
  url   = {https://slurm.schedmd.com/cpu_management.html}
}


@techreport{google-clusterdata,
  author      = {John Wilkes},
  title       = {{Google} cluster-usage traces v3},
  institution = {Google Inc.},
  year        = 2020,
  month       = Apr,
  type        = {Technical Report},
  address     = {Mountain View, CA, USA},
  note        = {Posted at \url{https://github.com/google/cluster-data/blob/master/ClusterData2019.md}},
  abstract    = {
                 This document describes the semantics, data format, and
                 schema of usage traces of a few Google compute cells.
                 This document describes version 3 of the trace format.}
}

@techreport{alibaba-clusterdata,
  title = {{Alibaba} cluster-trace-v2018},
  year  = 2018,
  type  = {Technical Report},
  note  = {Posted at \url{https://github.com/alibaba/clusterdata/blob/master/cluster-trace-v2018/trace_2018.md}}
}

@inproceedings{drf-article,
  title     = {Dominant Resource Fairness: Fair Allocation of Multiple Resource Types},
  author    = {Ali Ghodsi and Matei A. Zaharia and Benjamin Hindman and Andy Konwinski and Scott Shenker and Ion Stoica},
  booktitle = {Symposium on Networked Systems Design and Implementation},
  year      = {2011},
  url       = {https://api.semanticscholar.org/CorpusID:6693615}
}

@inproceedings{mapreduce-article,
  title     = {MapReduce: Simplified Data Processing on Large Clusters},
  author    = {Jeffrey Dean and Sanjay Ghemawat},
  year      = {2004},
  booktitle = {OSDI'04: Sixth Symposium on Operating System Design and Implementation},
  pages     = {137--150},
  address   = {San Francisco, CA}
}


@article{tetris-article,
  author     = {Grandl, Robert and Ananthanarayanan, Ganesh and Kandula, Srikanth and Rao, Sriram and Akella, Aditya},
  title      = {Multi-resource packing for cluster schedulers},
  year       = {2014},
  issue_date = {October 2014},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {44},
  number     = {4},
  issn       = {0146-4833},
  url        = {https://doi.org/10.1145/2740070.2626334},
  doi        = {10.1145/2740070.2626334},
  abstract   = {Tasks in modern data parallel clusters have highly diverse resource requirements, along CPU, memory, disk and network. Any of these resources may become bottlenecks and hence, the likelihood of wasting resources due to fragmentation is now larger. Today's schedulers do not explicitly reduce fragmentation. Worse, since they only allocate cores and memory, the resources that they ignore (disk and network) can be over-allocated leading to interference, failures and hogging of cores or memory that could have been used by other tasks. We present Tetris, a cluster scheduler that packs, i.e., matches multi-resource task requirements with resource availabilities of machines so as to increase cluster efficiency (makespan). Further, Tetris uses an analog of shortest-running-time-first to trade-off cluster efficiency for speeding up individual jobs. Tetris' packing heuristics seamlessly work alongside a large class of fairness policies. Trace-driven simulations and deployment of our prototype on a 250 node cluster shows median gains of 30\% in job completion time while achieving nearly perfect fairness.},
  journal    = {SIGCOMM Comput. Commun. Rev.},
  month      = {aug},
  pages      = {455–466},
  numpages   = {12},
  keywords   = {packing, multi-dimensional, makespan, fairness, completion time, cluster schedulers}
}



@article{simgrid-article,
  title       = {{Versatile, Scalable, and Accurate Simulation of Distributed Applications and Platforms}},
  author      = {Casanova, Henri and Giersch, Arnaud and Legrand, Arnaud and Quinson, Martin and Suter, Fr{\'e}d{\'e}ric},
  url         = {https://inria.hal.science/hal-01017319},
  journal     = {{Journal of Parallel and Distributed Computing}},
  publisher   = {{Elsevier}},
  volume      = {74},
  number      = {10},
  pages       = {2899-2917},
  year        = {2014},
  month       = Jun,
  doi         = {10.1016/j.jpdc.2014.06.008},
  pdf         = {https://inria.hal.science/hal-01017319v2/file/simgrid3-journal.pdf},
  hal_id      = {hal-01017319},
  hal_version = {v2}
}

@inproceedings{opendc-article,
  author = {Iosup, Alexandru and Andreadis, Georgios and Beek, Vincent and Bijman, Matthijs and Eyk, Erwin and Neacsu, Mihai and Overweel, Leon and Talluri, Sacheendra and Versluis, Laurens and Visser, Maaike},
  year   = {2017},
  month  = {07},
  url    = {https://atlarge-research.com/pdfs/ccgrid21-opendc-paper.pdf},
  pages  = {85-94},
  title  = {The OpenDC Vision: Towards Collaborative Datacenter Simulation and Exploration for Everybody},
  doi    = {10.1109/ISPDC.2017.25}
}

@misc{accasim-article,
  title         = {AccaSim: a Customizable Workload Management Simulator for Job Dispatching Research in HPC Systems},
  author        = {Cristian Galleguillos and Zeynep Kiziltan and Alessio Netti and Ricardo Soto},
  year          = {2018},
  eprint        = {1806.06728},
  archiveprefix = {arXiv},
  primaryclass  = {cs.DC}
}

@inproceedings{batsim-article,
  title       = {{Batsim: a Realistic Language-Independent Resources and Jobs Management Systems Simulator}},
  author      = {Dutot, Pierre-Fran{\c c}ois and Mercier, Michael and Poquet, Millian and Richard, Olivier},
  url         = {https://hal.science/hal-01333471},
  booktitle   = {{20th Workshop on Job Scheduling Strategies for Parallel Processing}},
  address     = {Chicago, United States},
  year        = {2016},
  month       = May,
  keywords    = {RJMS ; Scheduling ; Simulation ; Reproducibility},
  pdf         = {https://hal.science/hal-01333471/file/batsim.pdf},
  hal_id      = {hal-01333471},
  hal_version = {v1}
}

@inproceedings{elastisim-article,
  author    = {\"{O}zden, Taylan and Beringer, Tim and Mazaheri, Arya and Fard, Hamid Mohammadi and Wolf, Felix},
  title     = {ElastiSim: A Batch-System Simulator for Malleable Workloads},
  year      = {2023},
  isbn      = {9781450397339},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3545008.3545046},
  doi       = {10.1145/3545008.3545046},
  booktitle = {Proceedings of the 51st International Conference on Parallel Processing},
  articleno = {40},
  numpages  = {11},
  keywords  = {simulations, resource management, malleable workloads, batch systems, adaptive job scheduling},
  location  = {Bordeaux, France},
  series    = {ICPP '22}
}

@inproceedings{irmasim-article,
  author    = {Herrera, Adrián and Ibáñez, Mario and Stafford, Esteban and Bosque, Jose Luis},
  booktitle = {2021 IEEE/ACM 21st International Symposium on Cluster, Cloud and Internet Computing (CCGrid)},
  title     = {A Simulator for Intelligent Workload Managers in Heterogeneous Clusters},
  year      = {2021},
  volume    = {},
  number    = {},
  pages     = {196-205},
  keywords  = {Energy consumption;Power demand;Multicore processing;Computational modeling;High performance computing;Memory management;Reinforcement learning;Resource Management;Reinforced Learning;Scheduling Simulation;Heterogeneous Systems},
  doi       = {10.1109/CCGrid51090.2021.00029}
}

@inproceedings{fat-tree-networks-article,
  author    = {Petrini, F. and Vanneschi, M.},
  booktitle = {Proceedings 11th International Parallel Processing Symposium},
  title     = {k-ary n-trees: high performance networks for massively parallel architectures},
  year      = {1997},
  volume    = {},
  number    = {},
  pages     = {87-93},
  keywords  = {Communication system traffic control;Parallel architectures;Multiprocessor interconnection networks;Switches;Communication switching;Network topology;Analytical models;Algorithm design and analysis;Adaptive algorithm;Routing},
  doi       = {10.1109/IPPS.1997.580853}
}

@inproceedings{borg-next-gen,
  title     = {Borg: the Next Generation},
  author    = {Muhammad Tirmazi and Adam Barker and Nan Deng and Md Ehtesam Haque and Zhijing Gene Qin and Steven Hand and Mor Harchol-Balter and John Wilkes},
  year      = {2020},
  booktitle = {EuroSys'20},
  address   = {Heraklion, Crete}
}